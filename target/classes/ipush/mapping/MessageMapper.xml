<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ipush.dao.MessageMapper">
	<resultMap id="BaseResultMap" type="ipush.model.Message">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="content_id" property="contentId" jdbcType="INTEGER" />
		<result column="to_group_id" property="toGroupId" jdbcType="INTEGER" />
		<result column="channel" property="channel" jdbcType="INTEGER" />
		<result column="push_time" property="pushTime" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="create_user_id" property="createUserId"
			jdbcType="INTEGER" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="cron_expression" property="cronExpression"
			jdbcType="VARCHAR" />
		<result column="push_type" property="pushType" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, title, content_id, to_group_id, channel, push_time, status,
		create_time, create_user_id,
		update_time, cron_expression, push_type
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_message
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select * from t_message
	</select>
	<select id="selectByUserId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select * from t_message where create_user_id = #{id}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_message
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="ipush.model.Message"
		useGeneratedKeys="true" keyProperty="id">
		insert into t_message (id, title, content_id,
		to_group_id, channel, push_time,
		status, create_time, create_user_id,
		update_time, cron_expression, push_type
		)
		values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
		#{contentId,jdbcType=INTEGER},
		#{toGroupId,jdbcType=INTEGER}, #{channel,jdbcType=INTEGER}, #{pushTime,jdbcType=TIMESTAMP},
		#{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
		#{createUserId,jdbcType=INTEGER},
		#{updateTime,jdbcType=TIMESTAMP}, #{cronExpression,jdbcType=VARCHAR}, #{pushType,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="ipush.model.Message"
		useGeneratedKeys="true" keyProperty="id">
		insert into t_message
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="contentId != null">
				content_id,
			</if>
			<if test="toGroupId != null">
				to_group_id,
			</if>
			<if test="channel != null">
				channel,
			</if>
			<if test="pushTime != null">
				push_time,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createUserId != null">
				create_user_id,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="cronExpression != null">
				cron_expression,
			</if>
			<if test="pushType != null">
				push_type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="contentId != null">
				#{contentId,jdbcType=INTEGER},
			</if>
			<if test="toGroupId != null">
				#{toGroupId,jdbcType=INTEGER},
			</if>
			<if test="channel != null">
				#{channel,jdbcType=INTEGER},
			</if>
			<if test="pushTime != null">
				#{pushTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserId != null">
				#{createUserId,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="cronExpression != null">
				#{cronExpression,jdbcType=VARCHAR},
			</if>
			<if test="pushType != null">
				#{pushType,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="ipush.model.Message">
		update t_message
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="contentId != null">
				content_id = #{contentId,jdbcType=INTEGER},
			</if>
			<if test="toGroupId != null">
				to_group_id = #{toGroupId,jdbcType=INTEGER},
			</if>
			<if test="channel != null">
				channel = #{channel,jdbcType=INTEGER},
			</if>
			<if test="pushTime != null">
				push_time = #{pushTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserId != null">
				create_user_id = #{createUserId,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="cronExpression != null">
				cron_expression = #{cronExpression,jdbcType=VARCHAR},
			</if>
			<if test="pushType != null">
				push_type = #{pushType,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="ipush.model.Message">
		update t_message
		set title = #{title,jdbcType=VARCHAR},
		content_id = #{contentId,jdbcType=INTEGER},
		to_group_id = #{toGroupId,jdbcType=INTEGER},
		channel = #{channel,jdbcType=INTEGER},
		push_time = #{pushTime,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		create_user_id = #{createUserId,jdbcType=INTEGER},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		cron_expression = #{cronExpression,jdbcType=VARCHAR},
		push_type = #{pushType,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>


	<select id="selectByPushType" resultType="ipush.model.Message">
		select * from t_message where push_type = #{pushType} and 
		<![CDATA[TO_DAYS(push_time) = TO_DAYS(#{currentDay}) and status < 2]]>
	</select>

	<update id="updateStatus">
		update t_message set status = #{newStatus} where id = #{id}
	</update>

</mapper>