<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ipush.dao.MessageTemplateMapper" >
  <resultMap id="BaseResultMap" type="ipush.model.MessageTemplate" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content_id" property="contentId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="ipush.model.MessageTemplate" extends="BaseResultMap" >
    <result column="view" property="view" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, level, title, content_id
  </sql>
  <sql id="Blob_Column_List" >
    view
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_message_template
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_message_template
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="ipush.model.MessageTemplate" >
    insert into t_message_template (id, name, level, 
      title, content_id, view
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{contentId,jdbcType=INTEGER}, #{view,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="ipush.model.MessageTemplate" >
    insert into t_message_template
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="contentId != null" >
        content_id,
      </if>
      <if test="view != null" >
        view,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="contentId != null" >
        #{contentId,jdbcType=INTEGER},
      </if>
      <if test="view != null" >
        #{view,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ipush.model.MessageTemplate" >
    update t_message_template
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="contentId != null" >
        content_id = #{contentId,jdbcType=INTEGER},
      </if>
      <if test="view != null" >
        view = #{view,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="ipush.model.MessageTemplate" >
    update t_message_template
    set name = #{name,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      content_id = #{contentId,jdbcType=INTEGER},
      view = #{view,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ipush.model.MessageTemplate" >
    update t_message_template
    set name = #{name,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      content_id = #{contentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>